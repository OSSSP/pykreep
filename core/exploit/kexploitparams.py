import core.errors


class KExploitParams:
    def __init__(self):
        self.params = []

    def add_param(self, name, required=True, description=None, default_value=None, validator=None):
        if not name:
            raise core.errors.ParameterError('Invalid param name')

        self.params.append({
            'name': name,
            'required': required,
            'description': description,
            'value': default_value,
            'validator': validator
        })

        return self

    def set_param(self, name, value):
        for param in self.params:
            if param['name'] == name:
                param['value'] = value
                break
        else:
            raise core.errors.ParameterError('No such param \'{}\''.format(name))
        return self


    def pretty_print(self):
        print('Parameters available for exploit:')
        pad = ' ' * 4
        for param in self.params:
            print(pad,
                  param['name'] + '*' if param['required'] else '',
                  '=',
                  param['value'],
                  '# ',
                  param['description'])